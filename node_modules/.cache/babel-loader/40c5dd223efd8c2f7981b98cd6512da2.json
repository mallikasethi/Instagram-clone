{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\Desktop\\\\Instagram-clone\\\\src\\\\components\\\\Overlay\\\\Overlay.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Avatar, Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport CustomInput from '../Input/Input';\nimport { database } from '../../firebase/firebase.utils';\nimport { useStateValue } from '../../context/StateProvider';\nimport Loader from '../Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Overlay({\n  videoObj\n}) {\n  _s();\n\n  const [comment, setComment] = useState('');\n  const [userComments, setUserComments] = useState(null);\n  const classes = useStyles();\n  const {\n    state: {\n      user,\n      post\n    }\n  } = useStateValue();\n  const linkToUserProfile = `/profile/${videoObj.userId}`;\n\n  const handleChange = e => {\n    setComment(e.target.value);\n  };\n\n  async function handleOnEnter() {\n    let obj = {\n      text: comment,\n      username: user.displayName,\n      profileUrl: user.profileUrl\n    };\n    const postData = post.find(p => p.postId === videoObj.postId);\n\n    try {\n      let docRef = await database.comments.add(obj);\n      await database.posts.doc(videoObj.postId).update({\n        comments: [...postData.comments, docRef.id]\n      });\n\n      if (user.userId !== videoObj.username) {\n        await database.notifications.add({\n          sender: user.userId,\n          recipient: videoObj.username,\n          createdAt: database.getUserTimeStamp(),\n          type: \"comment\",\n          read: false,\n          postId: videoObj.postId\n        });\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    setComment('');\n  }\n\n  useEffect(() => {\n    const postData = post.find(p => p.postId === videoObj.postId);\n    let comments = postData.comments;\n\n    async function getComments(comments) {\n      let arr = [];\n\n      for (let i = comments.length - 1; i >= 0; i--) {\n        let doc = await database.comments.doc(comments[i]).get();\n        arr.push({ ...doc.data()\n        });\n      }\n\n      setUserComments(arr);\n    }\n\n    if (comments.length > 0) {\n      getComments(comments);\n    }\n  }, [post]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.cover,\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        className: classes.video,\n        controls: true,\n        autoPlay: true,\n        muted: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: videoObj.src,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.details,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            height: \"10%\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            \"aria-controls\": \"simple-menu\",\n            \"aria-haspopup\": \"true\",\n            className: classes.purple,\n            alt: videoObj.username,\n            src: videoObj.profileUrl,\n            children: videoObj.username.charAt(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.userName,\n            variant: \"h6\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: linkToUserProfile,\n              children: videoObj.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.showComment,\n          children: userComments == null ? /*#__PURE__*/_jsxDEV(Loader, {\n            size: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 36\n          }, this) : userComments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.commentDiv,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: comment.profileUrl,\n              className: classes.da\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 'bold',\n                  display: 'inline-block'\n                },\n                children: comment.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 24\n              }, this), \"\\xA0\\xA0\", comment.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.comment,\n          children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n            name: \"comment\",\n            value: comment,\n            label: \"Comment\",\n            handleChange: handleChange,\n            type: \"text\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleOnEnter,\n            disabled: comment === '' ? true : false,\n            className: classes.cbtn,\n            color: \"primary\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Overlay, \"enLfHesys8ZTwbr1nEU3zju2w1w=\", false, function () {\n  return [useStyles, useStateValue];\n});\n\n_c = Overlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"Overlay\");","map":{"version":3,"sources":["C:/Users/om/Desktop/Instagram-clone/src/components/Overlay/Overlay.jsx"],"names":["React","useEffect","useState","Card","CardContent","CardMedia","Typography","Avatar","Button","Link","useStyles","CustomInput","database","useStateValue","Loader","Overlay","videoObj","comment","setComment","userComments","setUserComments","classes","state","user","post","linkToUserProfile","userId","handleChange","e","target","value","handleOnEnter","obj","text","username","displayName","profileUrl","postData","find","p","postId","docRef","comments","add","posts","doc","update","id","notifications","sender","recipient","createdAt","getUserTimeStamp","type","read","err","console","log","message","getComments","arr","i","length","get","push","data","root","cover","video","src","details","content","display","height","width","purple","charAt","userName","showComment","map","index","commentDiv","da","fontWeight","cbtn"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Avatar, Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useStyles } from './styles'\r\nimport CustomInput from '../Input/Input';\r\nimport { database } from '../../firebase/firebase.utils';\r\nimport { useStateValue } from '../../context/StateProvider';\r\nimport Loader from '../Loader/Loader';\r\n\r\n\r\nexport default function Overlay({ videoObj }) {\r\n  const [comment, setComment] = useState('');\r\n  const [userComments, setUserComments] = useState(null);\r\n  const classes = useStyles();\r\n  const { state: { user, post } } = useStateValue()\r\n  const linkToUserProfile = `/profile/${videoObj.userId}`\r\n\r\n  const handleChange = (e) => {\r\n    setComment(e.target.value)\r\n  }\r\n\r\n  async function handleOnEnter () {\r\n    let obj = {\r\n        text:comment,\r\n        username: user.displayName,\r\n        profileUrl: user.profileUrl,    \r\n    }\r\n\r\n    const postData = post.find(p => p.postId === videoObj.postId)\r\n\r\n    try{\r\n      let docRef = await database.comments.add(obj)\r\n      await database.posts.doc(videoObj.postId).update({\r\n          comments: [...postData.comments, docRef.id]\r\n      })\r\n      if(user.userId !== videoObj.username){\r\n        await database.notifications.add({\r\n          sender: user.userId,\r\n          recipient: videoObj.username,\r\n          createdAt: database.getUserTimeStamp(),\r\n          type: \"comment\",\r\n          read: false,\r\n          postId: videoObj.postId\r\n        })\r\n      }\r\n    }catch(err){\r\n      console.log(err.message)\r\n    }\r\n    setComment('')\r\n  }\r\n\r\n  useEffect(() => {\r\n    const postData = post.find(p => p.postId === videoObj.postId);\r\n    let comments = postData.comments;\r\n    async function getComments(comments){\r\n      let arr = []\r\n      for(let i=comments.length-1; i>=0; i--){\r\n        let doc = await database.comments.doc(comments[i]).get()\r\n        arr.push({\r\n          ...doc.data()\r\n        })\r\n      }\r\n      setUserComments(arr);\r\n    }\r\n    if(comments.length > 0){\r\n      getComments(comments)\r\n    }\r\n  }, [post])\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia className={classes.cover}>\r\n        <video className={classes.video}  controls autoPlay muted>\r\n            <source \r\n                src={videoObj.src} \r\n                type=\"video/mp4\"\r\n            >\r\n            </source>\r\n        </video>\r\n      </CardMedia>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <div style={{display: \"flex\", height: \"10%\", width: \"100%\"}}>\r\n              <Avatar aria-controls=\"simple-menu\" aria-haspopup=\"true\" className={classes.purple} alt={videoObj.username} src={videoObj.profileUrl}>\r\n                  {videoObj.username.charAt(0)}\r\n              </Avatar>\r\n              <Typography className={classes.userName} variant=\"h6\">   \r\n                  <Link to={linkToUserProfile} >\r\n                    {videoObj.username}\r\n                  </Link>\r\n              </Typography>\r\n          </div>\r\n          <div className={classes.showComment}>\r\n            {\r\n              userComments==null ? <Loader size={40}/>\r\n              :\r\n              userComments.map((comment,index) => (\r\n                <div key={index} className={classes.commentDiv}>\r\n                    <Avatar src={comment.profileUrl} className={classes.da} />\r\n                    <p><span style={{fontWeight:'bold',display:'inline-block'}}>{comment.username}</span>&nbsp;&nbsp;{comment.text}</p>\r\n                </div>\r\n              ))\r\n            }\r\n          </div>\r\n          <div className={classes.comment}>\r\n            <CustomInput name=\"comment\" value={comment} label=\"Comment\" handleChange={handleChange} type=\"text\" autoFocus />\r\n            <Button onClick={handleOnEnter} disabled={comment === '' ? true:false} className={classes.cbtn} color=\"primary\">Post</Button>\r\n          </div>\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}