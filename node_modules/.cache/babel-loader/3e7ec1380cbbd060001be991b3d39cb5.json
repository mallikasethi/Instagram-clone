{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\Desktop\\\\Instagram-clone\\\\src\\\\components\\\\Notifications\\\\Notifications.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Menu, MenuItem, IconButton, Tooltip, Typography, Badge } from \"@material-ui/core\";\nimport { Favorite, Chat } from \"@material-ui/icons\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { database } from '../../firebase/firebase.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Notifications(props) {\n  _s();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const notifications = props.notifications;\n  let notificationsIcon;\n\n  const handleOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onMenuOpened = () => {\n    let unreadNotificationsIds = props.notifications.filter(not => !not.read).map(not => not.notificationId);\n    markNotificationsRead(unreadNotificationsIds);\n  };\n\n  const markNotificationsRead = async notIds => {\n    for (let i = 0; i < notIds.length; i++) {\n      await database.notifications.doc(notIds[i]).update({\n        read: true\n      });\n    }\n  };\n\n  if (notifications && notifications.length > 0) {\n    notifications.filter(not => not.read === false).length > 0 ? notificationsIcon = /*#__PURE__*/_jsxDEV(Badge, {\n      badgeContent: notifications.filter(not => not.read === false).length,\n      color: \"secondary\",\n      children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this) : notificationsIcon = /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 30\n    }, this);\n  } else {\n    notificationsIcon = /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }, this);\n  }\n\n  let notificationsMarkup = notifications && notifications.length > 0 ? notifications.map(not => {\n    const verb = not.type === \"like\" ? \"liked\" : \"commented on\";\n    const iconColor = not.read ? \"primary\" : \"secondary\";\n    const icon = not.type === \"like\" ? /*#__PURE__*/_jsxDEV(Favorite, {\n      color: iconColor,\n      style: {\n        marginRight: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Chat, {\n      color: iconColor,\n      style: {\n        marginRight: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: handleClose,\n      children: [icon, /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [not.sender, \" \", verb, \" your post\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, not.createdAt, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(MenuItem, {\n    onClick: handleClose,\n    children: \"You have no notifications yet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: \"top\",\n      title: \"Notifications\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-owns\": anchorEl ? \"simple-menu\" : undefined,\n        \"aria-haspopup\": \"true\",\n        onClick: handleOpen,\n        children: notificationsIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      onEntered: onMenuOpened,\n      children: notificationsMarkup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Notifications, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n\n_c = Notifications;\nexport default Notifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"sources":["C:/Users/om/Desktop/Instagram-clone/src/components/Notifications/Notifications.jsx"],"names":["React","useState","Menu","MenuItem","IconButton","Tooltip","Typography","Badge","Favorite","Chat","NotificationsIcon","database","Notifications","props","anchorEl","setAnchorEl","notifications","notificationsIcon","handleOpen","event","currentTarget","handleClose","onMenuOpened","unreadNotificationsIds","filter","not","read","map","notificationId","markNotificationsRead","notIds","i","length","doc","update","notificationsMarkup","verb","type","iconColor","icon","marginRight","sender","createdAt","undefined","Boolean"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport { Favorite, Chat } from \"@material-ui/icons\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n\r\nimport { database } from '../../firebase/firebase.utils';\r\n\r\nfunction Notifications(props) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const notifications = props.notifications;\r\n  let notificationsIcon;\r\n\r\n  const handleOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const onMenuOpened = () => {\r\n    let unreadNotificationsIds = props.notifications\r\n      .filter((not) => !not.read)\r\n      .map((not) => not.notificationId);\r\n    markNotificationsRead(unreadNotificationsIds);\r\n  };\r\n\r\n  const markNotificationsRead = async (notIds) => {\r\n    for(let i=0; i<notIds.length; i++){\r\n      await database.notifications.doc(notIds[i]).update({\r\n            read: true\r\n      })\r\n    }\r\n  }\r\n\r\n  if (notifications && notifications.length > 0) {\r\n    notifications.filter((not) => not.read === false).length > 0\r\n      ? (notificationsIcon = (\r\n          <Badge\r\n            badgeContent={\r\n              notifications.filter((not) => not.read === false).length\r\n            }\r\n            color=\"secondary\"\r\n          >\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        ))\r\n      : (notificationsIcon = <NotificationsIcon />);\r\n  } else {\r\n    notificationsIcon = <NotificationsIcon />;\r\n  }\r\n\r\n  let notificationsMarkup =\r\n    notifications && notifications.length > 0 ? (\r\n      notifications.map((not) => {\r\n        const verb = not.type === \"like\" ? \"liked\" : \"commented on\";\r\n        const iconColor = not.read ? \"primary\" : \"secondary\";\r\n        const icon =\r\n          not.type === \"like\" ? (\r\n            <Favorite color={iconColor} style={{ marginRight: 10 }} />\r\n          ) : (\r\n            <Chat color={iconColor} style={{ marginRight: 10 }} />\r\n          );\r\n\r\n        return (\r\n          <MenuItem key={not.createdAt} onClick={handleClose}>\r\n            {icon}\r\n            <Typography variant=\"body1\">\r\n              {not.sender} {verb} your post\r\n            </Typography>\r\n          </MenuItem>\r\n        );\r\n      })\r\n    ) : (\r\n      <MenuItem onClick={handleClose}>You have no notifications yet</MenuItem>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip placement=\"top\" title=\"Notifications\">\r\n        <IconButton\r\n          aria-owns={anchorEl ? \"simple-menu\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleOpen}\r\n        >\r\n          {notificationsIcon}\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose} onEntered={onMenuOpened}>\r\n        {notificationsMarkup}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n"]},"metadata":{},"sourceType":"module"}