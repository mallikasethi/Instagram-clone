{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\Desktop\\\\Instagram-clone\\\\src\\\\context\\\\StateProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useReducer, useState } from 'react';\nimport { auth, createUserProfileDocument, database } from \"../firebase/firebase.utils\";\nimport { ACTIONS } from './reducer';\nimport Loader from '../components/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateContext = /*#__PURE__*/createContext();\nexport function StateProvider({\n  reducer,\n  initialState,\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [loading, setLoading] = useState(true);\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function signout() {\n    return auth.signOut();\n  }\n\n  async function signup(email, password) {\n    const {\n      user\n    } = await auth.createUserWithEmailAndPassword(email, password);\n    return user;\n  }\n\n  useEffect(() => {\n    console.log(\"inside effect\");\n    const unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      console.log(\"inside event listner\");\n\n      if (!userAuth) {\n        dispatch({\n          type: ACTIONS.SET_USER,\n          user: userAuth\n        });\n        console.log(\"setting user\");\n        console.log(\"setting loading to false\");\n        setLoading(false);\n      } else {\n        const obj = await createUserProfileDocument(userAuth);\n        const {\n          userRef,\n          snapShot\n        } = obj;\n\n        if (snapShot.exists) {\n          userRef.onSnapshot(snap => {\n            dispatch({\n              type: ACTIONS.SET_USER,\n              user: { ...snap.data()\n              }\n            });\n            console.log(\"setting user\");\n            console.log(\"setting loading to false\");\n            setLoading(false);\n          });\n        }\n\n        database.posts.orderBy('createdAt', 'desc').onSnapshot(async snapshot => {\n          let postsArr = snapshot.docs.map(doc => doc.data());\n          let newPostArr = [];\n\n          for (let i = 0; i < postsArr.length; i++) {\n            let obj = postsArr[i];\n            let userRef = database.users.doc(obj.auid);\n            let udoc = await userRef.get();\n            obj.user = udoc.data().displayName;\n            obj.profileUrl = udoc.data().profileUrl;\n            newPostArr.push(obj);\n          }\n\n          dispatch({\n            type: ACTIONS.SET_POST,\n            post: newPostArr\n          });\n        });\n      }\n    });\n    return () => {\n      unsubscribeFromAuth();\n    };\n  }, []);\n  const value = {\n    login,\n    signout,\n    signup,\n    setLoading,\n    state,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: value,\n    children: [console.log(\"inside auth\", loading), !loading ? children : /*#__PURE__*/_jsxDEV(Loader, {\n      size: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StateProvider, \"A799Ac0iWAvoq7vIegmORa4i+1s=\");\n\n_c = StateProvider;\nexport const useStateValue = () => {\n  _s2();\n\n  return useContext(StateContext);\n};\n\n_s2(useStateValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["C:/Users/om/Desktop/Instagram-clone/src/context/StateProvider.js"],"names":["React","createContext","useContext","useEffect","useReducer","useState","auth","createUserProfileDocument","database","ACTIONS","Loader","StateContext","StateProvider","reducer","initialState","children","state","dispatch","loading","setLoading","login","email","password","signInWithEmailAndPassword","signout","signOut","signup","user","createUserWithEmailAndPassword","console","log","unsubscribeFromAuth","onAuthStateChanged","userAuth","type","SET_USER","obj","userRef","snapShot","exists","onSnapshot","snap","data","posts","orderBy","snapshot","postsArr","docs","map","doc","newPostArr","i","length","users","auid","udoc","get","displayName","profileUrl","push","SET_POST","post","value","useStateValue"],"mappings":"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","sourcesContent":["import React, {createContext, useContext, useEffect, useReducer, useState } from 'react';\r\nimport { auth, createUserProfileDocument, database } from \"../firebase/firebase.utils\"\r\nimport { ACTIONS } from './reducer';\r\nimport Loader from '../components/Loader/Loader'\r\n\r\nconst StateContext = createContext();\r\n\r\nexport function StateProvider({ reducer, initialState, children}){\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function signout() {\r\n        return auth.signOut();\r\n    }\r\n\r\n    async function signup(email, password){\r\n        const { user } = await auth.createUserWithEmailAndPassword(email, password);   \r\n        return user;\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"inside effect\")\r\n        const unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\r\n            console.log(\"inside event listner\")\r\n\r\n            if(!userAuth){\r\n                dispatch({type: ACTIONS.SET_USER, user: userAuth})\r\n                console.log(\"setting user\");\r\n                console.log(\"setting loading to false\");\r\n                setLoading(false)\r\n            }else{\r\n                const obj = await createUserProfileDocument(userAuth)\r\n                const {userRef, snapShot} = obj;\r\n\r\n                if(snapShot.exists){\r\n                    userRef.onSnapshot(snap => {\r\n                        dispatch({type: ACTIONS.SET_USER, user: {...snap.data()}})\r\n                        console.log(\"setting user\");\r\n                        console.log(\"setting loading to false\");\r\n                        setLoading(false)   \r\n                    })\r\n                }\r\n\r\n                database.posts.orderBy('createdAt', 'desc').onSnapshot(async(snapshot) => {                          \r\n                        let postsArr = snapshot.docs.map(doc => doc.data());\r\n                        let newPostArr = [];\r\n                        for(let i=0; i<postsArr.length; i++){\r\n                            let obj = postsArr[i];\r\n\r\n                            let userRef = database.users.doc(obj.auid);\r\n                            let udoc = await userRef.get();\r\n                            obj.user = udoc.data().displayName;\r\n                            obj.profileUrl = udoc.data().profileUrl;\r\n        \r\n                            newPostArr.push(obj);\r\n                        }\r\n                        dispatch({type: ACTIONS.SET_POST, post: newPostArr})\r\n                    });\r\n            }\r\n        })\r\n        return () => {\r\n            unsubscribeFromAuth()\r\n        }\r\n    }, [])\r\n\r\n    const value = {login , signout, signup, setLoading, state, dispatch}\r\n    return (\r\n        <StateContext.Provider value={value}>\r\n            {console.log(\"inside auth\", loading)}\r\n            {!loading ? children : (<Loader size={50}/>)}\r\n        </StateContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useStateValue = () => useContext(StateContext);"]},"metadata":{},"sourceType":"module"}