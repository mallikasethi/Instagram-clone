{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\Desktop\\\\Instagram-clone\\\\src\\\\components\\\\Video\\\\Video.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport VideoFooter from \"../VideoFooter/VideoFooter\";\nimport VideoSidebar from \"../VideoSidebar/VideoSidebar\";\nimport { useStyles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Video(props) {\n  _s();\n\n  const [playing, setPlaying] = useState(false);\n  const videoRef = useRef(null);\n  const classes = useStyles();\n\n  const onVideoPress = e => {\n    if (e.currentTarget !== videoRef.current) {\n      return;\n    }\n\n    if (playing) {\n      videoRef.current.pause();\n      setPlaying(false);\n    } else {\n      videoRef.current.play();\n      setPlaying(true);\n    }\n  };\n\n  const sendDataToOverlay = () => {\n    let videoObject = {\n      src: props.downloadurl,\n      userId: props.auid,\n      profileUrl: props.profileUrl,\n      username: props.user,\n      postId: props.postId\n    };\n    videoRef.current.pause();\n    setPlaying(false);\n    props.handleOverlay(videoObject);\n  };\n\n  const handleAutoScroll = e => {\n    let next = ReactDOM.findDOMNode(e.target).parentNode.nextSibling;\n\n    if (next) {\n      next.scrollIntoView({\n        behavior: \"smooth\"\n      });\n      e.target.muted = true;\n      next.children[0].play();\n    } else {\n      ReactDOM.findDOMNode(e.target).parentNode.parentNode.scrollTo(0, 0);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.root} videos`,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      onEnded: handleAutoScroll,\n      className: classes.video,\n      onClick: onVideoPress,\n      ref: videoRef,\n      id: props.id,\n      muted: true,\n      autoPlay: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: props.downloadurl,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoFooter, {\n      userId: props.auid,\n      description: props.message,\n      song: props.song,\n      profileUrl: props.profileUrl,\n      username: props.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoSidebar, {\n      userId: props.auid,\n      pid: props.postId,\n      likes: props.likes,\n      comments: props.comments,\n      sendDateToOverlay: sendDataToOverlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Video, \"e/759n0wLhVaYXQbEYmodnPjch4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["C:/Users/om/Desktop/Instagram-clone/src/components/Video/Video.jsx"],"names":["React","useRef","useState","ReactDOM","VideoFooter","VideoSidebar","useStyles","Video","props","playing","setPlaying","videoRef","classes","onVideoPress","e","currentTarget","current","pause","play","sendDataToOverlay","videoObject","src","downloadurl","userId","auid","profileUrl","username","user","postId","handleOverlay","handleAutoScroll","next","findDOMNode","target","parentNode","nextSibling","scrollIntoView","behavior","muted","children","scrollTo","root","video","id","message","song","likes","comments"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport VideoFooter from \"../VideoFooter/VideoFooter\";\r\nimport VideoSidebar from \"../VideoSidebar/VideoSidebar\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport default function Video(props) {\r\n  const [playing, setPlaying] = useState(false);\r\n  const videoRef = useRef(null);\r\n\r\n  const classes = useStyles();\r\n\r\n  const onVideoPress = (e) => {\r\n    if (e.currentTarget !== videoRef.current) {\r\n      return;\r\n    }\r\n    if (playing) {\r\n      videoRef.current.pause();\r\n      setPlaying(false);\r\n    } else {\r\n      videoRef.current.play();\r\n      setPlaying(true);\r\n    }\r\n  };\r\n\r\n  const sendDataToOverlay = () => {\r\n    let videoObject = {\r\n      src: props.downloadurl,\r\n      userId: props.auid,\r\n      profileUrl: props.profileUrl,\r\n      username: props.user,\r\n      postId: props.postId,\r\n    };\r\n    videoRef.current.pause();\r\n    setPlaying(false);\r\n    props.handleOverlay(videoObject);\r\n  };\r\n\r\n  const handleAutoScroll = (e) => {\r\n    let next = ReactDOM.findDOMNode(e.target).parentNode.nextSibling;\r\n    if (next) {\r\n      next.scrollIntoView({ behavior: \"smooth\" });\r\n      e.target.muted = true;\r\n      next.children[0].play();\r\n    } else {\r\n      ReactDOM.findDOMNode(e.target).parentNode.parentNode.scrollTo(0, 0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`${classes.root} videos`}>\r\n      <video\r\n        onEnded={handleAutoScroll}\r\n        className={classes.video}\r\n        onClick={onVideoPress}\r\n        ref={videoRef}\r\n        id={props.id}\r\n        muted\r\n        autoPlay\r\n      >\r\n        <source src={props.downloadurl} type=\"video/mp4\"></source>\r\n      </video>\r\n      <VideoFooter\r\n        userId={props.auid}\r\n        description={props.message}\r\n        song={props.song}\r\n        profileUrl={props.profileUrl}\r\n        username={props.user}\r\n      />\r\n      <VideoSidebar\r\n        userId={props.auid}\r\n        pid={props.postId}\r\n        likes={props.likes}\r\n        comments={props.comments}\r\n        sendDateToOverlay={sendDataToOverlay}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}