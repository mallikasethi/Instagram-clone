{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\desktop\\\\Instagram-clone\\\\src\\\\Pages\\\\Profile\\\\Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { Avatar, Button, CircularProgress, Container, Grid, IconButton, Input, Typography } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport LocationOn from \"@material-ui/icons/LocationOn\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport { useStateValue } from \"../../context/StateProvider\";\nimport { database, storage } from \"../../firebase/firebase.utils\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { useStyles } from \"./styles\";\nimport PostCard from \"../../components/PostCard/PostCard\";\nimport EditDetails from \"../../components/EditDetails/EditDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Profile(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    state: {\n      user,\n      post\n    }\n  } = useStateValue();\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [profileUser, setProfileUser] = useState(null);\n  const [userPosts, setUserPosts] = useState(null);\n  const profileId = props.match.params.id;\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleFileChange = e => {\n    var _e$target;\n\n    e.preventDefault();\n    let file = e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files[0];\n\n    if (file != null) {\n      console.log(\"file \", file);\n      setLoading(true);\n    } else {\n      return;\n    }\n\n    storage.ref().child(\"users\").child(user.userId).child(file.name).put(file).then(response => response.ref.getDownloadURL()).then(photoURL => database.users.doc(user.userId).update({\n      profileUrl: photoURL\n    })).then(() => {\n      setLoading(false);\n    }).catch(err => {\n      alert(\"error occured \" + err.message);\n    });\n  };\n\n  useEffect(() => {\n    if (profileId === user.userId) {\n      setProfileUser({ ...user\n      });\n      fetchPosts(user);\n    } else {\n      fetchUser().then(userData => fetchPosts(userData));\n    }\n\n    async function fetchUser() {\n      const doc = await database.users.doc(profileId).get();\n      setProfileUser({ ...doc.data()\n      });\n      return doc.data();\n    }\n\n    function fetchPosts(userData) {\n      let {\n        postIds\n      } = userData;\n      let arr = [];\n\n      for (let i = 0; i < postIds.length; i++) {\n        let val = post.find(obj => obj.postId === postIds[i]);\n\n        if (val !== undefined) {\n          arr.push(val);\n        }\n      }\n\n      if (arr.length > 0) {\n        setUserPosts(arr);\n      }\n    }\n  }, [profileId, post, user]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    children: profileUser === null ? /*#__PURE__*/_jsxDEV(Loader, {\n      size: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.main,\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: classes.submain,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.infoContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.profileImage,\n            children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n              \"aria-controls\": \"simple-menu\",\n              \"aria-haspopup\": \"true\",\n              className: classes.purple,\n              alt: profileUser.displayName,\n              src: profileUser.profileUrl,\n              children: profileUser.displayName.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), profileId === user.userId && /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"contained-button-file\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                className: classes.input,\n                accept: \"image/*\",\n                id: \"contained-button-file\",\n                multiple: true,\n                type: \"file\",\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                disabled: loading,\n                component: \"span\",\n                color: \"secondary\",\n                className: classes.editIcon,\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.userInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.nameContainer,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: profileUser.displayName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), profileId === user.userId && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleClick,\n                color: \"secondary\",\n                variant: \"outlined\",\n                children: \"Edit Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [profileUser.bio && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: profileUser.bio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 39\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), profileUser.location && /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.location,\n                  children: [/*#__PURE__*/_jsxDEV(LocationOn, {\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 25\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: profileUser.location\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 56\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this), profileUser.website && /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.website,\n                  children: [/*#__PURE__*/_jsxDEV(LinkIcon, {\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: profileUser.website,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: profileUser.website\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.postInfo,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [userPosts !== null ? userPosts.length : \"0\", \" posts\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"0 Followers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"0 Following\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: classes.submaintwo,\n        children: !userPosts ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loader,\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.postContainer,\n          children: userPosts.map(obj => /*#__PURE__*/_jsxDEV(PostCard, { ...obj\n          }, obj.postId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditDetails, {\n        open: open,\n        setOpen: setOpen,\n        profileId: profileId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Profile, \"GuJxQOHxKUGZ+qE233Tjv1sr0/U=\", false, function () {\n  return [useStyles, useStateValue];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/om/desktop/Instagram-clone/src/Pages/Profile/Profile.jsx"],"names":["React","useEffect","useState","Fragment","Avatar","Button","CircularProgress","Container","Grid","IconButton","Input","Typography","EditIcon","LocationOn","LinkIcon","useStateValue","database","storage","Loader","useStyles","PostCard","EditDetails","Profile","props","classes","state","user","post","loading","setLoading","open","setOpen","profileUser","setProfileUser","userPosts","setUserPosts","profileId","match","params","id","handleClick","handleFileChange","e","preventDefault","file","target","files","console","log","ref","child","userId","name","put","then","response","getDownloadURL","photoURL","users","doc","update","profileUrl","catch","err","alert","message","fetchPosts","fetchUser","userData","get","data","postIds","arr","i","length","val","find","obj","postId","undefined","push","main","submain","infoContainer","profileImage","purple","displayName","charAt","input","editIcon","userInfo","nameContainer","bio","location","website","postInfo","submaintwo","loader","postContainer","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  Input,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport { useStateValue } from \"../../context/StateProvider\";\r\nimport { database, storage } from \"../../firebase/firebase.utils\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { useStyles } from \"./styles\";\r\nimport PostCard from \"../../components/PostCard/PostCard\";\r\nimport EditDetails from \"../../components/EditDetails/EditDetails\";\r\n\r\nfunction Profile(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    state: { user, post },\r\n  } = useStateValue();\r\n  const [loading, setLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [profileUser, setProfileUser] = useState(null);\r\n  const [userPosts, setUserPosts] = useState(null);\r\n  const profileId = props.match.params.id;\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    e.preventDefault();\r\n    let file = e?.target?.files[0];\r\n    if (file != null) {\r\n      console.log(\"file \", file);\r\n      setLoading(true);\r\n    } else {\r\n      return;\r\n    }\r\n    storage\r\n      .ref()\r\n      .child(\"users\")\r\n      .child(user.userId)\r\n      .child(file.name)\r\n      .put(file)\r\n      .then((response) => response.ref.getDownloadURL())\r\n      .then((photoURL) =>\r\n        database.users.doc(user.userId).update({ profileUrl: photoURL })\r\n      )\r\n      .then(() => {\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"error occured \" + err.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (profileId === user.userId) {\r\n      setProfileUser({\r\n        ...user,\r\n      });\r\n      fetchPosts(user);\r\n    } else {\r\n      fetchUser().then((userData) => fetchPosts(userData));\r\n    }\r\n\r\n    async function fetchUser() {\r\n      const doc = await database.users.doc(profileId).get();\r\n      setProfileUser({\r\n        ...doc.data(),\r\n      });\r\n      return doc.data();\r\n    }\r\n\r\n    function fetchPosts(userData) {\r\n      let { postIds } = userData;\r\n      let arr = [];\r\n      for (let i = 0; i < postIds.length; i++) {\r\n        let val = post.find((obj) => obj.postId === postIds[i]);\r\n        if (val !== undefined) {\r\n          arr.push(val);\r\n        }\r\n      }\r\n      if (arr.length > 0) {\r\n        setUserPosts(arr);\r\n      }\r\n    }\r\n  }, [profileId, post, user]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      {profileUser === null ? (\r\n        <Loader size={50} />\r\n      ) : (\r\n        <Grid\r\n          className={classes.main}\r\n          container\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item className={classes.submain}>\r\n            <div className={classes.infoContainer}>\r\n              <div className={classes.profileImage}>\r\n                {loading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <Avatar\r\n                    aria-controls=\"simple-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    className={classes.purple}\r\n                    alt={profileUser.displayName}\r\n                    src={profileUser.profileUrl}\r\n                  >\r\n                    {profileUser.displayName.charAt(0)}\r\n                  </Avatar>\r\n                )}\r\n                {profileId === user.userId &&(\r\n                  <label htmlFor=\"contained-button-file\">\r\n                    <Input\r\n                      className={classes.input}\r\n                      accept=\"image/*\"\r\n                      id=\"contained-button-file\"\r\n                      multiple\r\n                      type=\"file\"\r\n                      onChange={handleFileChange}\r\n                    />\r\n                    <IconButton\r\n                      disabled={loading}\r\n                      component=\"span\"\r\n                      color=\"secondary\"\r\n                      className={classes.editIcon}\r\n                    >\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                  </label>\r\n                )}\r\n              </div>\r\n              <div className={classes.userInfo}>\r\n                <div className={classes.nameContainer}>\r\n                  <Typography variant=\"h5\">\r\n                    {profileUser.displayName}\r\n                  </Typography>\r\n                  {profileId === user.userId && (\r\n                    <Button\r\n                      onClick={handleClick}\r\n                      color=\"secondary\"\r\n                      variant=\"outlined\"\r\n                    >\r\n                      Edit Profile\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {profileUser.bio && <Typography variant=\"body2\">{profileUser.bio}</Typography>}\r\n                  <hr />\r\n                  {profileUser.location && (\r\n                    <Fragment>\r\n                      <div className={classes.location}>\r\n                        <LocationOn color=\"primary\" /> <span>{profileUser.location}</span>\r\n                      </div>\r\n                      <hr />\r\n                    </Fragment>\r\n                  )}\r\n                  {profileUser.website && (\r\n                    <Fragment>\r\n                      <div className={classes.website}>\r\n                        <LinkIcon color=\"primary\" />\r\n                        <a\r\n                          href={profileUser.website}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                         {profileUser.website}\r\n                        </a>\r\n                      </div>\r\n                      <hr />\r\n                    </Fragment>\r\n                  )}\r\n                </div>\r\n                <div className={classes.postInfo}>\r\n                  <Typography variant=\"h6\">\r\n                    {userPosts !== null ? userPosts.length : \"0\"} posts\r\n                  </Typography>\r\n                  <Typography variant=\"h6\">0 Followers</Typography>\r\n                  <Typography variant=\"h6\">0 Following</Typography>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n          <Grid item className={classes.submaintwo}>\r\n            {!userPosts ? (\r\n              <div className={classes.loader}>\r\n                <CircularProgress />\r\n              </div>\r\n            ) : (\r\n              <div className={classes.postContainer}>\r\n                {userPosts.map((obj) => (\r\n                  <PostCard key={obj.postId} {...obj} />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </Grid>\r\n          <EditDetails open={open} setOpen={setOpen} profileId={profileId} />\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}