{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\desktop\\\\Instagram-clone\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { TextField, Button, Typography, Paper, Input } from \"@material-ui/core\";\nimport BackupIcon from \"@material-ui/icons/Backup\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form({\n  handleSubmit\n}) {\n  _s();\n\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    selectedFile: \"\"\n  });\n  const classes = useStyles();\n\n  const clear = () => {\n    setPostData({\n      title: \"\",\n      message: \"\",\n      selectedFile: \"\"\n    });\n  };\n\n  const handleFileChange = e => {\n    var _e$target;\n\n    e.preventDefault();\n    let file = e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files[0];\n\n    if (file != null) {\n      console.log(\"file \", file);\n    } else {\n      return;\n    }\n\n    if (file.size / (1024 * 1024) > 20) {\n      alert(\"The selected file is very big\");\n      return;\n    }\n\n    setPostData({ ...postData,\n      selectedFile: file\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: e => {\n        e.preventDefault();\n        return handleSubmit(postData, setPostData);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Creating a Reel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Song\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Description\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contained-button-file\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            className: classes.input,\n            accept: \"image/*\",\n            id: \"contained-button-file\",\n            multiple: true,\n            type: \"file\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            startIcon: /*#__PURE__*/_jsxDEV(BackupIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 26\n            }, this),\n            color: \"secondary\",\n            variant: \"outlined\",\n            component: \"span\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"U6zcqdBLWFxyJQCx0P1V9gQYSzs=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/om/desktop/Instagram-clone/src/components/Form/Form.js"],"names":["useState","TextField","Button","Typography","Paper","Input","BackupIcon","useStyles","Form","handleSubmit","postData","setPostData","title","message","selectedFile","classes","clear","handleFileChange","e","preventDefault","file","target","files","console","log","size","alert","paper","root","form","value","fileInput","input","buttonSubmit"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { TextField, Button, Typography, Paper, Input } from \"@material-ui/core\";\r\nimport BackupIcon from \"@material-ui/icons/Backup\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nfunction Form({ handleSubmit }) {\r\n  const [postData, setPostData] = useState({\r\n    title: \"\",\r\n    message: \"\",\r\n    selectedFile: \"\",\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const clear = () => {\r\n    setPostData({ title: \"\", message: \"\", selectedFile: \"\" });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    e.preventDefault();\r\n    let file = e?.target?.files[0];\r\n    if (file != null) {\r\n      console.log(\"file \", file);\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    if (file.size / (1024 * 1024) > 20) {\r\n      alert(\"The selected file is very big\");\r\n      return;\r\n    }\r\n\r\n    setPostData({ ...postData, selectedFile: file})\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={`${classes.root} ${classes.form}`}\r\n        onSubmit={(e) => { e.preventDefault(); return handleSubmit(postData, setPostData);}}\r\n      >\r\n        <Typography variant=\"h6\">Creating a Reel</Typography>\r\n        <TextField\r\n          name=\"title\"\r\n          variant=\"outlined\"\r\n          label=\"Song\"\r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n        <TextField\r\n          name=\"message\"\r\n          variant=\"outlined\"\r\n          label=\"Description\"\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          value={postData.message}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n        <div className={classes.fileInput}>\r\n          <label htmlFor=\"contained-button-file\">\r\n            <Input\r\n              className={classes.input}\r\n              accept=\"image/*\"\r\n              id=\"contained-button-file\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={handleFileChange}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              startIcon={<BackupIcon />}\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              component=\"span\"\r\n            >\r\n              Upload\r\n            </Button>\r\n          </label>\r\n        </div>\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}