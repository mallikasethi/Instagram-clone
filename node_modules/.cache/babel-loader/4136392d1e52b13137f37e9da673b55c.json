{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\desktop\\\\Instagram-clone\\\\src\\\\Pages\\\\Signup\\\\Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Avatar, Button, Paper, Grid, Typography, Container, Input } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport BackupIcon from '@material-ui/icons/Backup';\nimport useStyles from './styles';\nimport CustomInput from '../../components/Input/Input';\nimport { useStateValue } from '../../context/StateProvider';\nimport { database, storage } from '../../firebase/firebase.utils';\nimport { ACTIONS } from '../../context/reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nfunction Signup(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    signup,\n    dispatch,\n    setLoading\n  } = useStateValue();\n  const [form, setForm] = useState(initialState);\n  const [file, setFile] = useState('');\n  const [loader, setLoader] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleFileChange = e => {\n    var _e$target;\n\n    let file = e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files[0];\n\n    if (file != null) {\n      console.log(\"file \", file);\n      setFile(e.target.files[0]);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoader(true);\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      confirmPassword\n    } = form;\n    const displayName = `${firstName} ${lastName}`;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    try {\n      let user = await signup(email, password);\n      let uid = user.uid;\n      const uploadTaskListener = storage.ref(`/users/${uid}/profileImage`).put(file); // fn1 -> progress\n      // fn2 -> error \n      // fn3-> success\n\n      uploadTaskListener.on('state_changed', fn1, fn2, fn3);\n\n      function fn1(snapshot) {\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log(progress);\n      }\n\n      function fn2(error) {\n        console.log(error);\n      }\n\n      async function fn3() {\n        // link get \n        let downloadurl = await uploadTaskListener.snapshot.ref.getDownloadURL();\n        let userObj = {\n          email: email,\n          userId: uid,\n          displayName,\n          createdAt: database.getUserTimeStamp(),\n          profileUrl: downloadurl,\n          postIds: []\n        };\n        await database.users.doc(uid).set(userObj);\n        dispatch({\n          type: ACTIONS.SET_USER,\n          user: userObj\n        });\n        setLoading(false);\n        setForm(initialState);\n        setLoader(false);\n        props.history.push(\"/\");\n      }\n    } catch (err) {\n      console.log(\"signup\", err);\n      setLoader(false);\n    }\n  };\n\n  const handleChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    setForm({ ...form,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.tc,\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n            name: \"firstName\",\n            value: form.firstName,\n            label: \"First Name\",\n            handleChange: handleChange,\n            autoFocus: true,\n            half: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n            name: \"lastName\",\n            value: form.lastName,\n            label: \"Last Name\",\n            handleChange: handleChange,\n            half: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n            name: \"email\",\n            value: form.email,\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n            name: \"password\",\n            value: form.password,\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n            name: \"confirmPassword\",\n            value: form.confirmPassword,\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contained-button-file\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            className: classes.input,\n            accept: \"image/*\",\n            id: \"contained-button-file\",\n            multiple: true,\n            type: \"file\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(BackupIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 44\n            }, this),\n            color: \"secondary\",\n            fullWidth: true,\n            variant: \"outlined\",\n            component: \"span\",\n            className: classes.file,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: loader,\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"Already have an account? Log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Signup, \"2ceQvtskV7V1KPVfsimHcILhcOE=\", false, function () {\n  return [useStyles, useStateValue];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/om/desktop/Instagram-clone/src/Pages/Signup/Signup.jsx"],"names":["useState","Link","Avatar","Button","Paper","Grid","Typography","Container","Input","LockOutlinedIcon","BackupIcon","useStyles","CustomInput","useStateValue","database","storage","ACTIONS","initialState","firstName","lastName","email","password","confirmPassword","Signup","props","classes","signup","dispatch","setLoading","form","setForm","file","setFile","loader","setLoader","showPassword","setShowPassword","handleShowPassword","prevShowPassword","handleFileChange","e","target","files","console","log","handleSubmit","preventDefault","displayName","alert","user","uid","uploadTaskListener","ref","put","on","fn1","fn2","fn3","snapshot","progress","bytesTransferred","totalBytes","error","downloadurl","getDownloadURL","userObj","userId","createdAt","getUserTimeStamp","profileUrl","postIds","users","doc","set","type","SET_USER","history","push","err","handleChange","name","value","tc","paper","avatar","input","submit"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Avatar, Button, Paper, Grid, Typography, Container, Input } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\n\r\nimport useStyles from './styles';\r\nimport CustomInput from '../../components/Input/Input';\r\nimport { useStateValue } from '../../context/StateProvider';\r\nimport { database, storage } from '../../firebase/firebase.utils';\r\nimport { ACTIONS } from '../../context/reducer';\r\n\r\nconst initialState = {firstName: '', lastName: '', email: '', password: '', confirmPassword: ''};\r\n\r\nfunction Signup(props) {\r\n    const classes = useStyles();\r\n    const { signup, dispatch, setLoading } = useStateValue();\r\n\r\n    const [form, setForm] = useState(initialState);\r\n    const [file, setFile] = useState('');\r\n    const [loader, setLoader] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\r\n\r\n    const handleFileChange = (e) => {\r\n        let file = e?.target?.files[0];\r\n        if(file != null){\r\n            console.log(\"file \", file)\r\n            setFile(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setLoader(true);\r\n        const { firstName, lastName, email, password, confirmPassword } = form;\r\n        const displayName = `${firstName} ${lastName}`\r\n\r\n        if (password !== confirmPassword) {\r\n            alert(\"passwords don't match\");\r\n            return;\r\n        }\r\n\r\n        try{\r\n            let user = await signup(email, password);\r\n            let uid = user.uid;\r\n            const uploadTaskListener = storage.ref(`/users/${uid}/profileImage`).put(file);\r\n\r\n            // fn1 -> progress\r\n            // fn2 -> error \r\n            // fn3-> success\r\n            uploadTaskListener.on('state_changed', fn1, fn2, fn3);\r\n\r\n            function fn1(snapshot) {\r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                console.log(progress);\r\n            }\r\n            function fn2(error) {\r\n                console.log(error)\r\n            }\r\n            async function fn3() {\r\n                // link get \r\n                let downloadurl = await uploadTaskListener.snapshot.ref.getDownloadURL();\r\n\r\n                let userObj = {\r\n                    email: email,\r\n                    userId: uid,\r\n                    displayName,\r\n                    createdAt: database.getUserTimeStamp(),\r\n                    profileUrl: downloadurl,\r\n                    postIds: []\r\n                }\r\n                await database.users.doc(uid).set(userObj)\r\n\r\n                dispatch({type: ACTIONS.SET_USER, user: userObj})\r\n                setLoading(false);\r\n\r\n                setForm(initialState);\r\n                setLoader(false);\r\n                props.history.push(\"/\")\r\n            }\r\n        }catch(err){\r\n            console.log(\"signup\", err)\r\n            setLoader(false);\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let {name , value} = e.target;\r\n\r\n        setForm({...form, [name]: value})\r\n    }\r\n    \r\n    return (\r\n        <Container className={classes.tc} component=\"main\" maxWidth=\"xs\">\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign Up\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <CustomInput name=\"firstName\" value={form.firstName} label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n                        <CustomInput name=\"lastName\" value={form.lastName} label=\"Last Name\" handleChange={handleChange} half />\r\n                        <CustomInput name=\"email\" value={form.email} label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n                        <CustomInput name=\"password\" value={form.password} label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\r\n                        <CustomInput name=\"confirmPassword\" value={form.confirmPassword} label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> \r\n                    </Grid>\r\n                    <label htmlFor=\"contained-button-file\">\r\n                        <Input className={classes.input} accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" onChange={handleFileChange} />\r\n                        <Button startIcon={<BackupIcon />} color=\"secondary\" fullWidth variant=\"outlined\" component=\"span\" className={classes.file}>\r\n                            Upload\r\n                        </Button>\r\n                    </label>\r\n                    <Button disabled={loader} type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                        <Button>\r\n                            <Link to=\"/login\">Already have an account? Log in</Link>\r\n                        </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}